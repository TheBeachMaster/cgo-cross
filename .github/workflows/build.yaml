name: Binaries Build

on: 
  push:
    branches:
      - 'main'

permissions:
  contents: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  OSX_CROSS_TOOLCHAIN_REPOSITORY: https://github.com/abhisek/osxcross
  OSX_CROSS_MACOS_SDK_VERSION: "12.3"

jobs:
  build:
    timeout-minutes: 30
    permissions:
      contents: write
    runs-on: ubuntu-latest       
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Install OSX Cross Compiler Build Tools
        run: sudo apt-get install -y -qq clang  \ 
              gcc g++ zlib1g-dev libmpc-dev libmpfr-dev \
              libgmp-dev cmake libxml2-dev libssl-dev xz-utils \
              gcc-mingw-w64-x86-64

      - name: Setup OSX Cross Compiler Tool Chain Environment
        run: |
          echo "OSXCROSS_DIR=$(dirname $GITHUB_WORKSPACE)/osxcross" >> $GITHUB_ENV

      - name: Clone OSX Cross Compiler Tool Chain
        run: git clone $OSX_CROSS_TOOLCHAIN_REPOSITORY $OSXCROSS_DIR

      - name: Setup Cache for OSX Cross Compiler Tool Chain
        id: osxcross-cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-osxcross-${{ env.OSX_CROSS_MACOS_SDK_VERSION }}
          path: |
            ${{ env.OSXCROSS_DIR }}/target/bin

      - name: Build OSX Cross Compiler Tool Chain
        if: steps.osxcross-cache.outputs.cache-hit != 'true'
        run: |
          cd $OSXCROSS_DIR
          SDK_VERSION=$OSX_CROSS_MACOS_SDK_VERSION UNATTENDED=yes ./build.sh

      - name: Add OSX Cross Compiler Tool Chain to Path
        run: |
          echo "$OSXCROSS_DIR/target/bin" >> $GITHUB_PATH

      # - name: Run GoReleaser
      #   uses: goreleaser/goreleaser-action@v6
      #   with:
      #     distribution: goreleaser
      #     version: 'latest'
      #     args: release --clean
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Run Semantic Release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          hooks: goreleaser
          force-bump-patch-version: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}